name: scientific
version: 0.3.3.8
id: scientific-0.3.3.8-1f877de96d6acf69ec37621814420908
key: scien_3HS9cJfbapbAQx0yjhevKP
license: BSD3
maintainer: Bas van Dijk <v.dijk.bas@gmail.com>
homepage: https://github.com/basvandijk/scientific
synopsis: Numbers represented using scientific notation
description:
    @Data.Scientific@ provides a space efficient and arbitrary precision
    scientific number type.
    .
    'Scientific' numbers are represented using
    <http://en.wikipedia.org/wiki/Scientific_notation scientific notation>. It
    uses a coefficient @c :: 'Integer'@ and a base-10 exponent @e :: 'Int'@ (do
    note that since we're using an 'Int' to represent the exponent these numbers
    aren't truly arbitrary precision). A scientific number corresponds to the
    'Fractional' number: @'fromInteger' c * 10 '^^' e@.
    .
    The main application of 'Scientific' is to be used as the target of parsing
    arbitrary precision numbers coming from an untrusted source. The advantages
    over using 'Rational' for this are that:
    .
    * A 'Scientific' is more efficient to construct. Rational numbers need to be
    constructed using '%' which has to compute the 'gcd' of the 'numerator' and
    'denominator'.
    .
    * 'Scientific' is safe against numbers with huge exponents. For example:
    @1e1000000000 :: 'Rational'@ will fill up all space and crash your
    program. Scientific works as expected:
    .
    > > read "1e1000000000" :: Scientific
    > 1.0e1000000000
    .
    * Also, the space usage of converting scientific numbers with huge exponents to
    @'Integral's@ (like: 'Int') or @'RealFloat's@ (like: 'Double' or 'Float')
    will always be bounded by the target type.
category: Data
author: Bas van Dijk
exposed: True
exposed-modules:
    Data.Scientific Data.Text.Lazy.Builder.Scientific
    Data.ByteString.Builder.Scientific
hidden-modules: Math.NumberTheory.Logarithms
trusted: False
import-dirs: /Users/ikuehne/Library/Haskell/ghc-7.10.3-x86_64/lib/scientific-0.3.3.8
library-dirs: /Users/ikuehne/Library/Haskell/ghc-7.10.3-x86_64/lib/scientific-0.3.3.8
data-dir: /Users/ikuehne/Library/Haskell/share/ghc-7.10.3-x86_64/scientific-0.3.3.8
hs-libraries: HSscientific-0.3.3.8-3HS9cJfbapbAQx0yjhevKP
depends:
    array-0.5.1.0-960bf9ae8875cc30355e086f8853a049
    base-4.8.2.0-bfcc6de9ee2962ae54db40ece3022dc5
    bytestring-0.10.6.0-acad045b3a1833aefbe19db17d332c3a
    deepseq-1.4.1.1-8eec8f9bea2efc2500f63544ec6ca569
    ghc-prim-0.4.0.0-6cdc86811872333585fa98756aa7c51e
    hashable-1.2.3.3-d2adbc08514e802e7af39a9b053e8ec5
    integer-gmp-1.0.0.0-3c8c40657a9870f5c33be17496806d8d
    text-1.2.1.1-136aef93c70b6ef2a68aa73abe3d8c58
haddock-interfaces: /Users/ikuehne/Library/Haskell/ghc-7.10.3-x86_64/lib/scientific-0.3.3.8/doc/html/scientific.haddock
haddock-html: /Users/ikuehne/Library/Haskell/ghc-7.10.3-x86_64/lib/scientific-0.3.3.8/doc/html
