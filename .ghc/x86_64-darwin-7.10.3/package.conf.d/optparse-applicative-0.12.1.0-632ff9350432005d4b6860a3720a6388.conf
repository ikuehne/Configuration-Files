name: optparse-applicative
version: 0.12.1.0
id: optparse-applicative-0.12.1.0-632ff9350432005d4b6860a3720a6388
key: optpa_FpNJ7fLofFNEy3rK4ZnBoD
license: BSD3
copyright: (c) 2012-2014 Paolo Capriotti <paolo@capriotti.io>
maintainer: paolo@capriotti.io
homepage: https://github.com/pcapriotti/optparse-applicative
synopsis: Utilities and combinators for parsing command line options
description:
    Here is a simple example of an applicative option parser:
    .
    @
    data Sample = Sample
    &#x20; &#x7b; hello :: String
    &#x20; , quiet :: Bool &#x7d;
    .
    sample :: Parser Sample
    sample = Sample
    &#x20; \<$\> strOption
    &#x20;     ( long \"hello\"
    &#x20;    \<\> metavar \"TARGET\"
    &#x20;    \<\> help \"Target for the greeting\" )
    &#x20; \<*\> switch
    &#x20;     ( long \"quiet\"
    &#x20;    \<\> help \"Whether to be quiet\" )
    @
    .
    The parser is built using applicative style starting from a set of basic
    combinators. In this example, @hello@ is defined as an 'option' with a
    @String@ argument, while @quiet@ is a boolean 'flag' (called 'switch').
    .
    A parser can be used like this:
    .
    @
    greet :: Sample -> IO ()
    greet (Sample h False) = putStrLn $ \"Hello, \" ++ h
    greet _ = return ()
    .
    main :: IO ()
    main = execParser opts \>\>= greet
    &#x20; where
    &#x20;   opts = info (helper \<*\> sample)
    &#x20;     ( fullDesc
    &#x20;    \<\> progDesc \"Print a greeting for TARGET\"
    &#x20;    \<\> header \"hello - a test for optparse-applicative\" )
    @
    .
    The @greet@ function is the entry point of the program, while @opts@ is a
    complete description of the program, used when generating a help text. The
    'helper' combinator takes any parser, and adds a @help@ option to it (which
    always fails).
    .
    The @hello@ option in this example is mandatory (since it doesn't have a
    default value), so running the program without any argument will display a
    help text:
    .
    >hello - a test for optparse-applicative
    >
    >Usage: hello --hello TARGET [--quiet]
    >  Print a greeting for TARGET
    >
    >Available options:
    >  -h,--help                Show this help text
    >  --hello TARGET           Target for the greeting
    >  --quiet                  Whether to be quiet
    .
    containing a short usage summary, and a detailed list of options with
    descriptions.
category: System
author: Paolo Capriotti
exposed: True
exposed-modules:
    Options.Applicative Options.Applicative.Arrows
    Options.Applicative.BashCompletion Options.Applicative.Builder
    Options.Applicative.Builder.Completer
    Options.Applicative.Builder.Internal Options.Applicative.Common
    Options.Applicative.Extra Options.Applicative.Help
    Options.Applicative.Help.Pretty Options.Applicative.Help.Chunk
    Options.Applicative.Help.Core Options.Applicative.Help.Types
    Options.Applicative.Types Options.Applicative.Internal
trusted: False
import-dirs: /Users/ikuehne/Library/Haskell/ghc-7.10.3-x86_64/lib/optparse-applicative-0.12.1.0
library-dirs: /Users/ikuehne/Library/Haskell/ghc-7.10.3-x86_64/lib/optparse-applicative-0.12.1.0
data-dir: /Users/ikuehne/Library/Haskell/share/ghc-7.10.3-x86_64/optparse-applicative-0.12.1.0
hs-libraries: HSoptparse-applicative-0.12.1.0-FpNJ7fLofFNEy3rK4ZnBoD
depends:
    ansi-wl-pprint-0.6.7.3-c624a14e647c937768855ca360a122b5
    base-4.8.2.0-bfcc6de9ee2962ae54db40ece3022dc5
    process-1.2.3.0-43f46fea20622dde8c5d485d65e4e315
    transformers-0.4.2.0-81450cd8f86b36eaa8fa0cbaf6efc3a3
    transformers-compat-0.4.0.4-8aa4073730c676dbe210ea8bffd8d092
haddock-interfaces: /Users/ikuehne/Library/Haskell/ghc-7.10.3-x86_64/lib/optparse-applicative-0.12.1.0/doc/html/optparse-applicative.haddock
haddock-html: /Users/ikuehne/Library/Haskell/ghc-7.10.3-x86_64/lib/optparse-applicative-0.12.1.0/doc/html
